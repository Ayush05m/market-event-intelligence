version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: market_intelligence_db
    environment:
      POSTGRES_DB: market_intelligence
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - market_intelligence_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d market_intelligence" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: market_intelligence_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - market_intelligence_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: market_intelligence_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:password@db:5432/market_intelligence
      - REDIS_URL=redis://redis:6379
      - NEWS_API_KEY=${NEWS_API_KEY:-}
      - ENV=development
      - LOG_LEVEL=INFO
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - market_intelligence_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Frontend Dashboard (to be built in Phase 5)
  frontend:
    build: ./frontend
    container_name: market_intelligence_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - market_intelligence_network
    profiles:
      - frontend

volumes:
  postgres_data:
  redis_data:


networks:
  market_intelligence_network:
    driver: bridge
